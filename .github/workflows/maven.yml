# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
        os: [ "ubuntu-latest" ]

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # 设置JDK版本
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: |
            ~/.m2/repository
            ~/.npm
            $GITHUB_WORKSPACE/passport-ui/node/
            $GITHUB_WORKSPACE/passport-ui/node_modules/
            $GITHUB_WORKSPACE/ui/node/
            $GITHUB_WORKSPACE/ui/node_modules/
          key: ${{ matrix.os }}-${{ hashFiles('pom.xml', '**/pom.xml', '**/**/pom.xml', '**/package.json') }}
          restore-keys: |
            ${{ matrix.os }}-

      - name: CI ENV
        id: date
        # bash, sh, cmd, powershell, pwsh
        # shell 类型必须为 sh，否则：
        # $GITHUB_ENV：仅支持 ubuntu、macos
        # $env:GITHUB_ENV：仅支持 windows
        shell: sh
        run: |
          env
          echo $GITHUB_RUN_ID
          echo $GITHUB_JOB-${{ matrix.java-version }}
          echo "CI_PIPELINE_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV
          echo "CI_JOB_ID=$GITHUB_JOB-${{ matrix.java-version }}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: pre
        run: |
          pwd
          cd spring-boot-starter-oauth2
          pwd
          python merge.py
          ls src/main/java/org/springframework/security/oauth2/server/authorization/http

      - name: Build with Maven
        run: |
          pwd
          cd spring-boot-starter-oauth2
          pwd
          mvn clean -e -U package source:jar javadoc:jar install -DskipTests
